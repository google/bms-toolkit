- name: Identify the first partition of the block device based on its persistent identifier (/dev/disk/by-id/)
  ansible.builtin.shell: >
    set -o pipefail;
    part_path="";
    case "{{ item.blk_device }}" in
      # If the block device is specified by a persistent identifier, append '-part1' to form the path to the first partition.
      /dev/disk/by-id/*)
        part_path="{{ item.blk_device }}"-part1;
        ;;
      # Skip /dev/mapper devices since they are typically managed by LVM and do not require partitioning (partitioning logical LVM volumes is not practical).
      /dev/mapper/*)
        part_path="";
        ;;
      # For other devices (E.g.: /dev/sda, /dev/nvme0n1), find the corresponding /dev/disk/by-id/ path and add '-part1' to denote the first partition.
      /dev/*)
        by_id_link=$(find /dev/disk/by-id/ -type l -exec sh -c 'echo $1 $(readlink -f $1)' _ {} \; | awk -v dev="{{ item.blk_device }}" '$2==dev {print $1}' | grep -vE '/dev/disk/by-id/(nvme-|scsi-|wwn-)' | head -n 1);
        part_path="${by_id_link}"-part1;
        ;;
    esac;
    if [[ -e "$part_path" ]] && [[ "$part_path" != "" ]]; then
      echo "$part_path"
    else
      echo ""
    fi
  loop: "{{ oracle_user_data_mounts }}"
  register: disk_paths
  tags: populate-user-mounts

- name: Update oracle_user_data_mounts with partition paths
  vars:
    blk_device_to_partition: >-
      {%- set mapping = {} -%}
      {%- for res in disk_paths.results -%}
        {%- if res.stdout != '' -%}
          {%- set _ = mapping.update({res.item.blk_device: res.stdout}) -%}
        {%- endif -%}
      {%- endfor -%}
      {{ mapping }}
  set_fact:
    oracle_user_data_mounts: >-
      {%- set updated_mounts = [] -%}
      {%- for mount in oracle_user_data_mounts -%}
        {%- set part_result = blk_device_to_partition.get(mount.blk_device, '') -%}
        {%- set updated_mount = mount | combine({'first_partition_id': part_result}) -%}
        {{ updated_mounts.append(updated_mount) }}
      {%- endfor -%}
      {{ updated_mounts }}
  tags: populate-user-mounts
